---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1beta1.custom.metrics.k8s.io
spec:
  service:
    name: {{adapter_service_name}}
    namespace: {{adapter_namespace}}
  group: custom.metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100
---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1beta2.custom.metrics.k8s.io
spec:
  service:
    name: {{adapter_service_name}}
    namespace: {{adapter_namespace}}
  group: custom.metrics.k8s.io
  version: v1beta2
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 200
---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1beta1.external.metrics.k8s.io
spec:
  service:
    name: {{adapter_service_name}}
    namespace: {{adapter_namespace}}
  group: external.metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: {{adapter_service_name}}
  namespace: {{adapter_namespace}}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: custom-metrics-auth-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: {{adapter_service_name}}
  namespace: {{adapter_namespace}}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: custom-metrics:system:auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: {{adapter_service_name}}
    namespace: {{adapter_namespace}}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: custom-metrics-server-resources
rules:
  - apiGroups:
    - custom.metrics.k8s.io
    - external.metrics.k8s.io
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hpa-controller-custom-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: custom-metrics-server-resources
subjects:
- kind: ServiceAccount
  name: horizontal-pod-autoscaler
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: custom-metrics-resource-reader
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - nodes
      - nodes/stats
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: custom-metrics-resource-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: custom-metrics-resource-reader
subjects:
  - kind: ServiceAccount
    name: {{adapter_service_name}}
    namespace: {{adapter_namespace}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{adapter_service_name}}
  namespace: {{adapter_namespace}}
spec:
  ports:
  - port: 443
    targetPort: 6443
  selector:
    app: {{adapter_service_name}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{adapter_service_name}}
  name: {{adapter_service_name}}
  namespace: {{adapter_namespace}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{adapter_service_name}}
  template:
    metadata:
      labels:
        app: {{adapter_service_name}}
      name: {{adapter_service_name}}
    spec:
      serviceAccountName: {{adapter_service_name}}
      containers:
      - name: {{adapter_service_name}}
        image: directxman12/k8s-prometheus-adapter-amd64
        args:
          - --secure-port=6443
          - --tls-cert-file=/var/run/serving-cert/tls.crt
          - --tls-private-key-file=/var/run/serving-cert/tls.key
          - --logtostderr=true
          - --prometheus-url=http://{{prometheus_service_name}}.{{prometheus_namespace}}.svc:9090/
          - --metrics-relist-interval=1m
          - --v=10
          - --config=/config/prom-adapter-config.yaml
        ports:
          - containerPort: 6443
        volumeMounts:
          - name: cert
            mountPath: /var/run/serving-cert
            readOnly: true
          - name: config
            mountPath: /config
            readOnly: true
          - name: tmp
            mountPath: /tmp

      volumes:
        - name: cert
          secret:
            secretName: {{adapter_tls_secret}}
        - name: config
          configMap:
            name: {{adapter_service_name}}
        - name: tmp
          emptyDir: {}
