---
apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
kubernetesVersion: stable
controlPlaneEndpoint: "{{load_balancer_dns}}:{{load_balancer_port}}"
# imageRepository: k8s.gcr.io
clusterName: kubernetes
apiServer:
  extraArgs:
    authorization-mode: Node,RBAC
    service-node-port-range: {{service_network_port_range}}
  timeoutForControlPlane: 4m0s
networking:
  podSubnet: {{pod_network_cidr}}
  serviceSubnet: {{service_network_cidr}}
  dnsDomain: {{cluster_dns_domain}}
etcd:
  external:
    endpoints:
{% for ip in k8s_etcd_nodes %}
      - https://{{ip}}:2379
{% endfor %}
    caFile: /etc/kubernetes/pki/etcd/ca.crt
    certFile: /etc/kubernetes/pki/apiserver-etcd-client.crt
    keyFile: /etc/kubernetes/pki/apiserver-etcd-client.key
---
apiVersion: kubeadm.k8s.io/v1beta2
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: {{hostvars[inventory_hostname]['ansible_default_ipv4']['address']}}
  bindPort: 6443
certificateKey: {{certificate_key}}
bootstrapTokens:
  - token: y7yaev.9dvwxx6ny4ef8vlq
    ttl: 0s
    usages:
      - signing
      - authentication
    groups:
      - system:bootstrappers:kubeadm:default-node-token
{% if cloud_provider is defined %}
nodeRegistration:
  kubeletExtraArgs:
    cloud-provider: {{cloud_provider}}
{% endif %}
