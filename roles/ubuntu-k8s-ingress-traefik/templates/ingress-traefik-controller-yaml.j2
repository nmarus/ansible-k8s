---
apiVersion: v1
kind: Namespace
metadata:
  name: {{traefik_controller_namespace}}
---
kind: ServiceAccount
apiVersion: v1
metadata:
  labels:
    app.kubernetes.io/instance: {{traefik_controller_service_name}}
    app.kubernetes.io/name: {{traefik_controller_service_name}}
  name: {{traefik_controller_service_name}}
  namespace: {{traefik_controller_namespace}}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/instance: {{traefik_controller_service_name}}
    app.kubernetes.io/name: {{traefik_controller_service_name}}
  name: {{traefik_controller_service_name}}
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - traefik.containo.us
    resources:
      - ingressroutes
      - ingressroutetcps
      - ingressrouteudps
      - middlewares
      - tlsoptions
      - tlsstores
      - traefikservices
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/instance: {{traefik_controller_service_name}}
    app.kubernetes.io/name: {{traefik_controller_service_name}}
  name: {{traefik_controller_service_name}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{traefik_controller_service_name}}
subjects:
  - kind: ServiceAccount
    name: {{traefik_controller_service_name}}
    namespace: {{traefik_controller_namespace}}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/instance: {{traefik_controller_service_name}}
    app.kubernetes.io/name: {{traefik_controller_service_name}}
  name: {{traefik_controller_service_name}}
  namespace: {{traefik_controller_namespace}}
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: {{traefik_controller_service_name}}
    app.kubernetes.io/name: {{traefik_controller_service_name}}
  name: {{traefik_controller_service_name}}
  namespace: {{traefik_controller_namespace}}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{traefik_controller_service_name}}
      app.kubernetes.io/name: {{traefik_controller_service_name}}
  replicas: {{traefik_minReplicas}}
  minReadySeconds: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{traefik_controller_service_name}}
        app.kubernetes.io/name: {{traefik_controller_service_name}}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{traefik_controller_service_port}}"
        prometheus.io/path: "/metrics"
    spec:
{% if traefik_node_label is defined and traefik_node_label_value is defined %}
      nodeSelector:
        {{traefik_node_label}}: {{traefik_node_label_value}}
{% endif %}
      serviceAccountName: {{traefik_controller_service_name}}
      terminationGracePeriodSeconds: 60
      containers:
        - name: {{traefik_controller_service_name}}
          image: traefik:2.2.8
          imagePullPolicy: IfNotPresent
          args:
            - --global.checknewversion
            # - --global.sendanonymoususage
            - --entryPoints.traefik.address=:{{traefik_controller_service_port}}/tcp
            - --entryPoints.web.address=:{{traefik_controller_http_port}}/tcp
            - --entryPoints.websecure.address=:{{traefik_controller_https_port}}/tcp
            - --entrypoints.web.http.redirections.entryPoint.to=websecure
            - --entrypoints.web.http.redirections.entryPoint.scheme=https
            - --api.dashboard=true
            - --ping=true
            - --providers.kubernetescrd
            - --providers.kubernetesingress
            - --serversTransport.insecureSkipVerify=true
          resources:
            limits:
              cpu: 1000m
              memory: 1024Mi
            requests:
              cpu: 500m
              memory: 256Mi
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash", "-c", "sleep 20"]
          readinessProbe:
            httpGet:
              path: /ping
              port: {{traefik_controller_service_port}}
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              path: /ping
              port: {{traefik_controller_service_port}}
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          ports:
            - name: traefik
              containerPort: {{traefik_controller_service_port}}
              protocol: TCP
            - name: web
              containerPort: {{traefik_controller_http_port}}
              protocol: TCP
            - name: websecure
              containerPort: {{traefik_controller_https_port}}
              protocol: TCP
          securityContext:
            capabilities:
              drop: [ALL]
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          volumeMounts:
            - name: data
              mountPath: /data
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{traefik_controller_service_name}}
        - name: tmp
          emptyDir: {}
      securityContext:
        fsGroup: 65532
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: {{traefik_controller_service_name}}
    app.kubernetes.io/name: {{traefik_controller_service_name}}
  name: {{traefik_controller_service_name}}
  namespace: {{traefik_controller_namespace}}
spec:
  selector:
    app.kubernetes.io/instance: {{traefik_controller_service_name}}
    app.kubernetes.io/name: {{traefik_controller_service_name}}
  topologyKeys:
    - "kubernetes.io/hostname"
    - "topology.kubernetes.io/zone"
    - "topology.kubernetes.io/region"
    - "*"
  ports:
    - port: {{traefik_exposed_service_port}}
      name: traefik
      targetPort: traefik
      protocol: TCP
    - port: {{traefik_exposed_http_port}}
      name: web
      targetPort: web
      protocol: TCP
    - port: {{traefik_exposed_https_port}}
      name: websecure
      targetPort: websecure
      protocol: TCP
  externalIPs:
    - {{traefik_vip}}
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  labels:
    app.kubernetes.io/instance: {{traefik_controller_service_name}}
    app.kubernetes.io/name: {{traefik_controller_service_name}}
  name: {{traefik_controller_service_name}}-dashboard
  namespace: {{traefik_controller_namespace}}
spec:
  entryPoints:
    - traefik
  routes:
    - kind: Rule
      match: PathPrefix(`/dashboard`) || PathPrefix(`/api`)
      services:
        - kind: TraefikService
          name: api@internal
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app.kubernetes.io/instance: {{traefik_controller_service_name}}
    app.kubernetes.io/name: {{traefik_controller_service_name}}
  name: {{traefik_controller_service_name}}
  namespace: {{traefik_controller_namespace}}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{traefik_controller_service_name}}
  minReplicas: {{traefik_minReplicas}}
  maxReplicas: {{traefik_maxReplicas}}
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 60
